{
  "version": 4,
  "terraform_version": "1.2.9",
  "serial": 87,
  "lineage": "872a04a7-fae9-ce4c-8efe-51c9a3365f26",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "n8n",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [
              "7b40a3f2-dd3d-714d-d69e-0819ca2422bc",
              "df6ef105-b3df-8674-b823-65ba9fef8db5"
            ],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "n8n",
            "jobspec": "job \"n8n\" {\n  datacenters = [\"dc1\"]\n  namespace = \"default\"\n  type = \"service\"\n  group \"n8n\" {\n    count = 1\n    network {\n      port  \"web\"{\n        static = 5678\n      }\n    }\n    volume \"n8n\" {\n      type      = \"host\"\n      source    = \"n8n\"\n      read_only = false\n    }\n    task \"n8n\" {\n      driver = \"docker\"\n      volume_mount {\n        volume      = \"n8n\"\n        destination = \"/home/node/.n8n\"\n        read_only   = false\n      }\n      constraint {\n        attribute = \"${meta.pg_host}\"\n        operator  = \"=\"\n        value     = \"first_host\"\n      }\n      config {\n        image = \"n8nio/n8n\"\n        command = \"/bin/bash\"\n        args = [\"-c\", \"n8n start --tunnel\"]\n        network_mode = \"host\"\n        ports = [\n          \"web\"\n          ]\n      }\n      env {\n        DB_TYPE = \"postgresdb\"\n        DB_POSTGRESDB_HOST = \"postgres.service.consul\"\n        DB_POSTGRESDB_PORT = 5432\n        DB_POSTGRESDB_DATABASE = \"n8n\"\n        DB_POSTGRESDB_USER = \"n8n\"\n        DB_POSTGRESDB_PASSWORD = \"n8npassword12345\"\n        N8N_BASIC_AUTH_ACTIVE = \"true\"\n        N8N_BASIC_AUTH_USER = \"test\"\n        N8N_BASIC_AUTH_PASSWORD = \"testpwd\"\n      }\n\n      logs {\n        max_files     = 5\n        max_file_size = 15\n      }\n\n      resources {\n        cpu = 1000\n        memory = 1024\n        network {\n          mbits = 10\n        }\n      }\n\n      service {\n        name = \"n8n\"\n        provider = \"consul\"\n        tags = [\n          \"traefik.enable=true\",\n          \"traefik.http.routers.n8n.tls=true\",\n          \"traefik.http.routers.n8n.rule=Host(`n8n.testbed.nocloud.today`)\",\n          \"traefik.http.routers.n8n.tls.certresolver=main\",\n          \"traefik.http.routers.n8n.tls.domains[0].main=n8n.testbed.nocloud.today\"\n        ]\n        port = \"web\"\n        check {\n          name = \"alive\"\n          type = \"tcp\"\n          interval = \"10s\"\n          timeout = \"2s\"\n        }\n      }\n    }\n    restart {\n      attempts = 10\n      interval = \"5m\"\n      delay = \"25s\"\n      mode = \"delay\"\n    }\n  }\n\n  update {\n    max_parallel = 1\n    min_healthy_time = \"5s\"\n    healthy_deadline = \"3m\"\n    auto_revert = false\n    canary = 0\n  }\n}\n\n",
            "json": null,
            "modify_index": "16505",
            "name": "n8n",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "n8n",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "n8n",
                    "volume_mounts": [
                      {
                        "destination": "/home/node/.n8n",
                        "read_only": false,
                        "volume": "n8n"
                      }
                    ]
                  }
                ],
                "volumes": [
                  {
                    "name": "n8n",
                    "read_only": false,
                    "source": "n8n",
                    "type": "host"
                  }
                ]
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.ns.nomad_namespace.ns",
            "module.quota.nomad_quota_specification.quota",
            "nomad_job.postgres",
            "nomad_job.traefik"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "nocodb",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [
              "e39a118e-92fe-0c07-1e75-0597b3985c26"
            ],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "nocodb",
            "jobspec": "job \"nocodb\" {\n  datacenters = [\"dc1\"]\n  namespace = \"default\"\n  type = \"service\"\n  group \"nocodb\" {\n    count = 1\n    network {\n      port  \"web\"{\n        static       = 8181\n      }\n    }\n    volume \"nocodb\" {\n      type      = \"host\"\n      source    = \"nocodb\"\n      read_only = false\n    }\n    task \"nocodb\" {\n      driver = \"docker\"\n      volume_mount {\n        volume      = \"nocodb\"\n        destination = \"/usr/app/data\"\n        read_only   = false\n      }\n      constraint {\n        attribute = \"${meta.pg_host}\"\n        operator  = \"=\"\n        value     = \"first_host\"\n      }\n      config {\n        image = \"nocodb/nocodb:latest\"\n        network_mode = \"host\"\n        ports = [\n          \"web\"\n          ]\n      }\n      env {\n          NC_DB = \"pg://postgres.service.consul:5432?u=nocodb\u0026p=nocodbpassword12345\u0026d=nocodb\"\n          PORT  = \"8181\"\n      }\n\n      logs {\n        max_files     = 5\n        max_file_size = 15\n      }\n\n      resources {\n        cpu = 1000\n        memory = 1024\n        network {\n          mbits = 10\n        }\n      }\n\n      service {\n        name = \"nocodb\"\n        provider = \"consul\"\n        tags = [\n          \"traefik.enable=true\",\n          \"traefik.http.routers.nocodb.tls=true\",\n          \"traefik.http.routers.nocodb.rule=Host(`nocodb.testbed.nocloud.today`)\",\n          \"traefik.http.routers.nocodb.tls.certresolver=main\",\n          \"traefik.http.routers.nocodb.tls.domains[0].main=nocodb.testbed.nocloud.today\"\n        ]\n        port = \"web\"\n        check {\n          name = \"alive\"\n          type = \"tcp\"\n          interval = \"10s\"\n          timeout = \"2s\"\n        }\n      }\n    }\n    restart {\n      attempts = 10\n      interval = \"5m\"\n      delay = \"25s\"\n      mode = \"delay\"\n    }\n  }\n\n  update {\n    max_parallel = 1\n    min_healthy_time = \"5s\"\n    healthy_deadline = \"3m\"\n    auto_revert = false\n    canary = 0\n  }\n}\n\n",
            "json": null,
            "modify_index": "16336",
            "name": "nocodb",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "nocodb",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "nocodb",
                    "volume_mounts": [
                      {
                        "destination": "/usr/app/data",
                        "read_only": false,
                        "volume": "nocodb"
                      }
                    ]
                  }
                ],
                "volumes": [
                  {
                    "name": "nocodb",
                    "read_only": false,
                    "source": "nocodb",
                    "type": "host"
                  }
                ]
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.ns.nomad_namespace.ns",
            "module.quota.nomad_quota_specification.quota",
            "nomad_job.postgres",
            "nomad_job.traefik"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "postgres",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [
              "df18efb1-ecb8-2a56-95a7-7e3e15c4bfb1"
            ],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "postgres",
            "jobspec": "job \"postgres\" {\n  datacenters = [\"dc1\"]\n  namespace = \"default\"\n  type = \"service\"\n  group \"postgres\" {\n    count = 1\n    volume \"persistence\" {\n      type      = \"host\"\n      source    = \"pg_data\"\n      read_only = false\n    }\n    task \"postgres\" {\n      driver = \"docker\"\n      volume_mount {\n        volume      = \"persistence\"\n        destination = \"/var/lib/postgresql/data\"\n        read_only   = false\n      }\n      constraint {\n        attribute = \"${meta.pg_host}\"\n        operator  = \"=\"\n        value     = \"first_host\"\n      }\n      config {\n        image = \"postgres:15.1\"\n        network_mode = \"host\"\n        port_map {\n          db = 5432\n        }\n\n      }\n      env {\n          POSTGRES_USER=\"root\",\n          POSTGRES_PASSWORD=\"rootpassword\"\n      }\n\n      logs {\n        max_files     = 5\n        max_file_size = 15\n      }\n\n      resources {\n        cpu = 1000\n        memory = 1024\n        network {\n          mbits = 10\n          port  \"db\"  {\n            static = 5432\n          }\n        }\n      }\n\n      service {\n        name = \"postgres\"\n        provider = \"consul\"\n        tags = [\"postgres\"]\n        port = \"db\"\n\n        check {\n          name     = \"alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n    }\n    restart {\n      attempts = 10\n      interval = \"5m\"\n      delay = \"25s\"\n      mode = \"delay\"\n    }\n\n  }\n\n  update {\n    max_parallel = 1\n    min_healthy_time = \"5s\"\n    healthy_deadline = \"3m\"\n    auto_revert = false\n    canary = 0\n  }\n}\n\n",
            "json": null,
            "modify_index": "8457",
            "name": "postgres",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "postgres",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "postgres",
                    "volume_mounts": [
                      {
                        "destination": "/var/lib/postgresql/data",
                        "read_only": false,
                        "volume": "persistence"
                      }
                    ]
                  }
                ],
                "volumes": [
                  {
                    "name": "persistence",
                    "read_only": false,
                    "source": "pg_data",
                    "type": "host"
                  }
                ]
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.ns.nomad_namespace.ns",
            "module.quota.nomad_quota_specification.quota"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [
              "671f22d9-1c0f-3bbd-512f-613dfafbf9cf"
            ],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "traefik",
            "jobspec": "job \"traefik\" {\n  datacenters = [\n    \"dc1\"]\n  namespace = \"default\"\n  type = \"service\"\n  group \"traefik\" {\n    count = 1\n    network {\n      port  \"http\"{\n        static = 80\n      }\n      port  \"https\"{\n        static = 443\n      }\n      port  \"admin\"{\n        static = 8080\n      }\n    }\n\n    volume \"letsencrypt\" {\n      type = \"host\"\n      source = \"letsencrypt\"\n      read_only = false\n    }\n\n    task \"server\" {\n      driver = \"docker\"\n      constraint {\n        attribute = \"${meta.pg_host}\"\n        operator = \"=\"\n        value = \"first_host\"\n      }\n\n      volume_mount {\n        volume = \"letsencrypt\"\n        destination = \"/letsencrypt\"\n        read_only = false\n      }\n\n      config {\n        image = \"traefik:v2.9.6\"\n        network_mode = \"host\"\n        ports = [\n          \"admin\",\n          \"http\",\n          \"https\"]\n        args = [\n          \"--api.dashboard=true\",\n          \"--api.insecure=true\",\n          ### For Test only, please do not use that in production\n\n          \"--entrypoints.web.address=:${NOMAD_PORT_http}\",\n          \"--entrypoints.traefik.address=:${NOMAD_PORT_admin}\",\n          \"--entryPoints.web-secure.address=:${NOMAD_PORT_https}\",\n\n          \"--entrypoints.web.http.redirections.entryPoint.to=web-secure\",\n          \"--entrypoints.web.http.redirections.entryPoint.scheme=https\",\n\n          \"--experimental.http3=true\",\n          \"--entrypoints.web-secure.http3.advertisedport=443\",\n\n          \"--providers.nomad=false\",\n          \"--providers.nomad.namespace=default\",\n          \"--providers.nomad.endpoint.address=http://31.171.245.230:4646\",\n          \"--providers.nomad.endpoint.token=d9bbf0dd-1a54-d6c9-d028-29f5363c9160\",\n\n          ### IP to your nomad server\n\n          \"--providers.consulCatalog.prefix=traefik\",\n          \"--providers.consulCatalog.exposedByDefault=false\",\n          \"--providers.consulCatalog.endpoint.address=http://31.171.245.230:8500\",\n\n          \"--certificatesresolvers.main.acme.httpchallenge=true\",\n          \"--certificatesresolvers.main.acme.caserver=https://acme-v02.api.letsencrypt.org/directory\",\n          \"--certificatesresolvers.main.acme.httpchallenge.entrypoint=web\",\n          \"--certificatesresolvers.main.acme.email=xz@mail.ru\",\n          \"--certificatesresolvers.main.acme.storage=/letsencrypt/acme.json\"\n        ]\n      }\n\n\n      logs {\n        max_files = 5\n        max_file_size = 15\n      }\n\n      resources {\n        cpu = 1000\n        memory = 1024\n      }\n\n      service {\n        name = \"traefik-http\"\n        provider = \"consul\"\n        port = \"http\"\n        check {\n          name     = \"alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n\n      service {\n        name = \"traefik-https\"\n        provider = \"consul\"\n        port = \"https\"\n        check {\n          name     = \"alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n\n      service {\n        name = \"traefik-admin\"\n        provider = \"consul\"\n        port = \"admin\"\n        check {\n          name     = \"alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n    }\n    restart {\n    attempts = 10\n    interval = \"5m\"\n    delay = \"25s\"\n    mode = \"delay\"\n  }\n}\n  update {\n    max_parallel = 1\n    min_healthy_time = \"5s\"\n    healthy_deadline = \"3m\"\n    auto_revert = false\n    canary = 0\n  }\n}\n\n",
            "json": null,
            "modify_index": "10541",
            "name": "traefik",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "traefik",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "server",
                    "volume_mounts": [
                      {
                        "destination": "/letsencrypt",
                        "read_only": false,
                        "volume": "letsencrypt"
                      }
                    ]
                  }
                ],
                "volumes": [
                  {
                    "name": "letsencrypt",
                    "read_only": false,
                    "source": "letsencrypt",
                    "type": "host"
                  }
                ]
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.ns.nomad_namespace.ns",
            "module.quota.nomad_quota_specification.quota"
          ]
        }
      ]
    },
    {
      "module": "module.ns",
      "mode": "managed",
      "type": "nomad_namespace",
      "name": "ns",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "index_key": "ns_postgres",
          "schema_version": 0,
          "attributes": {
            "capabilities": [],
            "description": "postgres namespace",
            "id": "postgres",
            "meta": {
              "owner": "xz",
              "proj": "pg_dev"
            },
            "name": "postgres",
            "quota": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.quota.nomad_quota_specification.quota"
          ]
        }
      ]
    }
  ]
}
